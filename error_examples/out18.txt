Source Program:
const increment = 1, stopValue = 10;
var counter;
begin
	counter := 0;

	while counter < stopValue
	begin

		counter := counter + increment;

		write counter;

	end
end.

Symbolic Lexeme List:
constsym identsym increment eqlsym numbersym 1 commasym identsym stopValue eqlsym numbersym 10 semicolonsym varsym identsym counter semicolonsym beginsym identsym counter becomesym numbersym 0 semicolonsym whilesym identsym counter lessym identsym stopValue beginsym identsym counter becomesym identsym counter plussym identsym increment semicolonsym writesym identsym counter semicolonsym endsym endsym periodsym 

Lexeme List:
28 2 increment 9 3 1 17 2 stopValue 9 3 10 18 29 2 counter 18 21 2 counter 20 3 0 18 25 2 counter 11 2 stopValue 21 2 counter 20 2 counter 4 2 increment 18 31 2 counter 18 22 22 19 
An error occurred while running parser: An expression cannot begin with this symbol.
Source Program:
const increment = 1, stopValue = 10;
var counter;
begin
	counter := 0;

	while counter < stopValue
	begin

		counter := counter + increment;

		write counter;

	end
end.

Symbolic Lexeme List:
constsym identsym increment eqlsym numbersym 1 commasym identsym stopValue eqlsym numbersym 10 semicolonsym varsym identsym counter semicolonsym beginsym identsym counter becomesym numbersym 0 semicolonsym whilesym identsym counter lessym identsym stopValue beginsym identsym counter becomesym identsym counter plussym identsym increment semicolonsym writesym identsym counter semicolonsym endsym endsym periodsym 

Lexeme List:
28 2 increment 9 3 1 17 2 stopValue 9 3 10 18 29 2 counter 18 21 2 counter 20 3 0 18 25 2 counter 11 2 stopValue 21 2 counter 20 2 counter 4 2 increment 18 31 2 counter 18 22 22 19 
An error occurred while running parser: do expected.
